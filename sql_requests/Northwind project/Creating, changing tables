#1. Create an exam table with fields:
- exam identifier - auto-incrementing, unique, prohibits NULL;
- name of the exam
- exam dates.

CREATE TABLE exam
(
	exam_id serial UNIQUE NOT NULL,
	exam_name varchar,
	exam_date varchar
)
 
#2. Remove unique constraint from id field.

ALTER TABLE exam
DROP CONSTRAINT exam_exam_id_key

#3. Add a primary key constraint on an id field.

ALTER TABLE exam
ADD PRIMARY KEY (exam_id)

#4. Create a person table with fields
- identity id (simple int, primary key)
- name
- last name.

CREATE TABLE person
(
	person_id int PRIMARY KEY,
	name varchar,
	last_name varchar
)

#5. Create a passport table with fields:
- passport id (simple int, primary key)
- serial number (simple int, prohibits NULL)
- registration
- reference to identity id (foreign key).

CREATE TABLE passport
(
	passport_id int PRIMARY KEY,
	serial_number int NOT NULL,
	registration varchar,
	person_id int,

	CONSTRAINT FK_passport_person FOREIGN KEY (person_id) REFERENCES person (person_id)
)

#6. Add a weight column to the book table (created earlier) with a constraint checking the weight (bigger than 0 but less than 100).

ALTER TABLE book
ADD COLUMN weigth decimal CONSTRAINT CHK_book_weigth CHECK (weigth > 0 AND weigth < 100)

#7. Make sure that the weight limit works (try inserting an invalid value).

INSERT INTO book
VALUES 
(1, 'New book', 'ibsn', 1, 1),
(3, 'New book1', 'ibsn', 1, 4),
(5, 'New book2', 'ibsn', 1, 4090)


#8. Create a table student with fields:
- id (auto-increment)
- full name
- course (default 1).

CREATE TABLE student
(
	student_id serial,
	full_name varchar,
	course varchar DEFAULT 1
)

#9. Insert a record into the students' table and make sure the default value insertion constraint works.

INSERT INTO student
VALUES 
(1, 'alex alexev')

#10. Remove the "default" constraint from the student table.

ALTER TABLE student 
ALTER COLUMN course DROP DEFAULT



